{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","CardComponent","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","background","children","Popup","closePopup","onClick","App","onSearchChange","event","setState","searchfield","target","value","openPopup","popup","state","fetch","responce","json","this","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACpB,OAEC,sBAAKC,UAAU,mDAAf,UACA,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACnD,gCACC,6BAAKJ,IACL,4BAAIC,WCNKI,EAAW,SAAC,GAAY,IAC9BC,EAD6B,EAAVC,OACEC,KAAI,SAACC,EAAKC,GACpC,OAAO,cAAC,EAAD,CAAcX,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAA7CS,MAEnB,OACC,8BAGEJ,KCHWK,EANC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACC,uBAAOC,KAAK,SAASC,YAAY,gBAAgBZ,UAAU,MAAMa,SAAUH,KCM9DI,EARF,SAACC,GACb,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,QAASC,WAAW,eAArF,SACEL,EAAMM,YCUKC,G,YAZD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,WACf,OACC,qBAAKvB,UAAU,cAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,qBAAKA,UAAU,eAAewB,QAASD,EAAvC,eAEA,mBAAGvB,UAAU,OAAb,+FC6DWyB,E,kDA5Dd,aAAc,IAAD,8BACZ,gBAmBDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SArB5B,EAwBbC,UAAU,WACT,EAAKJ,SAAS,CAACK,OAAM,KAzBT,EA4BbV,WAAW,WACV,EAAKK,SAAS,CAACK,OAAM,KA3BrB,EAAKC,MAAM,CACV7B,OAAO,GACPwB,YAAY,GACZI,OAAM,GALK,E,qDASb,WAAoB,IAAD,OAClBE,MAAM,8CACL7C,MAAK,SAAA8C,GACL,OAAOA,EAASC,UAEhB/C,MAAK,SAAAiB,GACL,EAAKqB,SAAS,CAACvB,OAAOE,S,oBAkBxB,WAEC,MAA2B+B,KAAKJ,MAAzB7B,EAAP,EAAOA,OAAOwB,EAAd,EAAcA,YAERU,EAAelC,EAAOmC,QAAO,SAACC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASd,EAAYa,kBAGtD,OAAQH,EAAeK,OAGrB,eAAC,IAAMC,SAAP,WACEP,KAAKJ,MAAMD,MAAQ,cAAC,EAAD,CAAOV,WAAYe,KAAKf,aAAgB,GAC5D,sBAAKvB,UAAU,KAAf,UACC,6BAA+B,IAA1BuC,EAAeK,OAAe,YAAc,aACjD,wBAAQpB,QAASc,KAAKN,UAAtB,wBACA,cAAC,EAAD,CAAWtB,aAAc4B,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUrB,OAAQkC,MAEnB,2DAXF,kD,GA3CcO,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.9617eddd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=({id,name,email})=>{\r\n\treturn(\r\n\r\n\t\t<div className=\"bg-light-green dib br4 pa3 ma2 grow bw2 shawow-5\">\r\n\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nexport const CardList = ({robots})=>{\r\n\tconst CardComponent=robots.map((user,i)=>{\r\n\t\treturn <Card key={i} id={user.id} name={user.name} email={user.email}/>\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\r\n\t\t\t{/*<Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>*/}\r\n\t\t\t{CardComponent}\r\n\t\t\t\r\n\t\t</div>\r\n\t\t)\r\n}","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n\treturn(\r\n\t\t<input type=\"search\" placeholder=\"Search Robots\" className=\"br4\" onChange={searchChange}/>\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n\treturn(\r\n\t\t<div style={{overflowY:'scroll', border:'3px solid black',height:'500px', background:'deepskyblue'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './popup.css';\r\n\r\nconst Popup = ({closePopup})=>{\r\n\treturn(\r\n\t\t<div className=\"popup--back\">\r\n\t\t\t<div className=\"popup--content\">\r\n\t\t\t\t<div className=\"popup--close\" onClick={closePopup}>X\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"para\">This is a React app where we can get different robots using fetch request.</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport {CardList} from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport \"./App.css\";\r\nimport Popup from '../components/Popup';\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:\"\",\r\n\t\t\tpopup:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(responce => {\r\n\t\t\treturn responce.json()\r\n\t\t})\r\n\t\t.then(user => {\r\n\t\t\tthis.setState({robots:user});\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value});\r\n\t}\r\n\r\n\topenPopup=()=>{\r\n\t\tthis.setState({popup:true});\r\n\t}\r\n\r\n\tclosePopup=() => {\r\n\t\tthis.setState({popup:false});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\tconst {robots,searchfield}=this.state;\r\n\r\n\t\tconst filteredRobots=robots.filter((robot)=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\treturn !filteredRobots.length ?\r\n\t\t\t <h1>Loading.....</h1> :\r\n\t\t\t(\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{this.state.popup ? <Popup closePopup={this.closePopup}/> : \"\"}\r\n\t\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t\t<h1>{filteredRobots.length === 0 ? \"no robots\" : \"Robofans\"}</h1>\r\n\t\t\t\t\t\t<button onClick={this.openPopup}>Open Popup</button>\r\n\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t<footer>Designed by ARC</footer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t)\r\n\t\t\r\n\t}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}